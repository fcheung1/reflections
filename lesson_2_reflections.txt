What happens when you initialize a repository? Why do you need to do it?
Initializing a repository allows you to create a .git file. 

How is the staging area different from the working directory and the repository?
Allows a temporary working space to make changes in before actually committing them to an id

What value do you think it offers?
By creating test environment it allows you to make small jumps 

How can you use the staging area to make sure you have one commit per logical
change?

By creating a drafting environment it helps me see what's to be committed before actually doing it

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches become helpful when testing out new versions that you aren't sure will work in the long term. Creates a testing sandbox for you to reference before being ready to push to the master. (Reference in the lessons as italian version of the game or an experiment)

How do the diagrams help you visualize the branch structure?

Diagrams show the flow of commits from the most recent to the original initiated commit. 

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

When you merge two branches together, all changes are put in chronological order - we represent it the way we do because it illustrates the flow of changes. Branches are simply labels to understand features being worked on 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

Pros of auto merges are it eases operational workflows, when manually merging, you get to make more fine tuned adjustments and more control 